name: Compare Docker Images
description: Compare Docker images between the base branch and PR branch
inputs:
  label:
    description: Label for the comment
    required: true
  baseRef:
    description: Branch or commit reference for the base Docker image (e.g., main)
    required: true
  headRef:
    description: Branch or commit reference for the PR Docker image
    required: true
  databaseUrl:
    description: Database URL secret
    required: true
  apiKey:
    description: API Key secret
    required: true
  pepper:
    description: Pepper secret
    required: true
  sessionSecret:
    description: Session secret
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout base branch
      uses: actions/checkout@v4
      with:
        path: base-branch
        ref: ${{ inputs.baseRef }}

    - name: Create .env file for base branch
      run: |
        echo "DATABASE_URL=${{ inputs.databaseUrl }}" > base-branch/.env.production
        echo "API_KEY=${{ inputs.apiKey }}" >> base-branch/.env.production
        echo "PEPPER=${{ inputs.pepper }}" >> base-branch/.env.production
        echo "SESSION_SECRET=${{ inputs.sessionSecret }}" >> base-branch/.env.production
      shell: bash

    - name: Checkout PR branch
      uses: actions/checkout@v4
      with:
        path: pr-branch
        ref: ${{ inputs.headRef }}

    - name: Create .env file for PR branch
      run: |
        echo "DATABASE_URL=${{ inputs.databaseUrl }}" > pr-branch/.env.production
        echo "API_KEY=${{ inputs.apiKey }}" >> pr-branch/.env.production
        echo "PEPPER=${{ inputs.pepper }}" >> pr-branch/.env.production
        echo "SESSION_SECRET=${{ inputs.sessionSecret }}" >> pr-branch/.env.production
      shell: bash

    - name: Build base Docker image
      run: |
        docker build --build-arg DATABASE_URL=${{ inputs.databaseUrl }} -t base-image -f base-branch/Dockerfile base-branch
      shell: bash

    - name: Build PR Docker image
      run: |
        docker build --build-arg DATABASE_URL=${{ inputs.databaseUrl }} -t pr-image -f pr-branch/Dockerfile pr-branch
      shell: bash

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 'stable'

    - name: Install diffoci
      run: go install github.com/reproducible-containers/diffoci/cmd/diffoci@latest
      shell: bash

    - name: Compare Docker images and generate detailed summary
      run: |
        # Create directory for output
        mkdir -p docker-diff

        # Get image sizes in bytes and convert to KB
        base_size=$(docker image inspect --format='{{.Size}}' base-image)
        pr_size=$(docker image inspect --format='{{.Size}}' pr-image)
        base_size_kb=$(( base_size / 1024 ))
        pr_size_kb=$(( pr_size / 1024 ))
        size_diff_kb=$(( pr_size_kb - base_size_kb ))

        # Run diffoci and capture output
        diff_output=$($HOME/go/bin/diffoci diff --semantic docker://base-image docker://pr-image || true)

        # Parse diff output for folder-level changes
        folder_changes=$(echo "$diff_output" | awk '
          BEGIN { print "Folder Changes:" }
          /^File/ {
            split($2, path, "/")
            folder = "/"
            for (i=2; i<length(path); i++) {
              folder = folder path[i] "/"
              if (!(folder in folders)) {
                folders[folder] = 0
              }
              folders[folder] += $4 - $3
            }
          }
          END {
            for (folder in folders) {
              size = folders[folder]
              if (size > 0) {
                print "- **Added/Expanded**: " folder " (+" size " KB)"
              } else if (size < 0) {
                print "- **Removed/Shrunk**: " folder " (" size " KB)"
              } else {
                print "- **No Size Change**: " folder " (0 KB)"
              }
            }
          }
        ')

        # Count added, removed, and changed files
        added=$(echo "$diff_output" | grep -c "only appears in input 1")
        removed=$(echo "$diff_output" | grep -c "only appears in input 0")
        changed=$(echo "$diff_output" | awk '/^File/ && $3 != $4 { count++ } END { print count + 0 }')

        # Construct comment body with markdown formatting
        {
          echo "Docker Image Comparison (base -> PR):"
          echo ""
          echo "**Image Sizes:**"
          echo "- Base image: ${base_size_kb} KB"
          echo "- PR image: ${pr_size_kb} KB"
          echo "- Difference: ${size_diff_kb} KB"
          echo ""
          echo "**File Changes:**"
          echo "- **Added files**: $added"
          echo "- **Removed files**: $removed"
          echo "- **Changed files**: $changed"
          echo ""
          echo "**Folder-Level Changes:**"
          echo "$folder_changes"
        } > docker-diff/comment-body.txt

        # Set the output for the comment body
        echo "body<<GH_DIFF_OUTPUT_END" >> $GITHUB_OUTPUT
        cat docker-diff/comment-body.txt >> $GITHUB_OUTPUT
        echo "GH_DIFF_OUTPUT_END" >> $GITHUB_OUTPUT
      shell: bash

    - name: Get comment body
      id: get-comment-body
      if: always() && github.event.number
      run: |
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        echo "body<<$EOF" >> $GITHUB_OUTPUT
        echo "<!-- GH-BOT-${{ inputs.label }} -->" >> $GITHUB_OUTPUT
        cat docker-diff/comment-body.txt >> $GITHUB_OUTPUT
        echo "$EOF" >> $GITHUB_OUTPUT
      shell: bash

    - name: Find Docker Diff Comment
      uses: peter-evans/find-comment@v3
      if: github.event.number
      id: fc-docker
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: 'GH-BOT-${{ inputs.label }}'

    - name: Create Docker Diff Comment
      uses: peter-evans/create-or-update-comment@v4
      if: github.event.number && steps.fc-docker.outputs.comment-id == 0
      with:
        issue-number: ${{ github.event.number }}
        body: ${{ steps.get-comment-body.outputs.body }}

    - name: Update Docker Diff Comment
      uses: peter-evans/create-or-update-comment@v4
      if: github.event.number && steps.fc-docker.outputs.comment-id != 0
      with:
        issue-number: ${{ github.event.number }}
        comment-id: ${{ steps.fc-docker.outputs.comment-id }}
        body: ${{ steps.get-comment-body.outputs.body }}
        edit-mode: replace
